generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "linux-arm64-openssl-1.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model user {
  id                     String   @id @default(cuid())
  email                  String   @unique
  social_security_number String   @unique
  name                   String
  created_at             DateTime @default(now())
  order                  order[]
}

model product {
  id          String   @id @default(cuid())
  name        String   @unique
  description String
  price       Float
  category_id String
  created_at  DateTime @default(now())
  updated_at  DateTime @updatedAt

  category   category     @relation(fields: [category_id], references: [id])
  order_item order_item[]
}

model category {
  id          String   @id @default(cuid())
  name        String   @unique
  description String
  created_at  DateTime @default(now())
  updated_at  DateTime @updatedAt

  product product[]
}

model order {
  id         String       @id @default(cuid())
  order      String       @unique
  status     String
  order_item order_item[]
  customer   String
  payment_id String
  created_at DateTime     @default(now())
  updated_at DateTime     @updatedAt
  user_id  String?

  payment payment @relation(fields: [payment_id], references: [id])
  user    user?   @relation(fields: [user_id], references: [id])

}

model order_item {
  id         String          @id @default(cuid())
  order_id   String
  product_id String
  name       String
  quantity   Int
  options    order_options[]
  price      Float
  amount     Float
  created_at DateTime        @default(now())
  updated_at DateTime        @updatedAt

  order   order   @relation(fields: [order_id], references: [id])
  product product @relation(fields: [product_id], references: [id])
}

model order_options {
  id           String      @id @default(cuid())
  extras       String
  order_item   order_item? @relation(fields: [order_itemId], references: [id])
  order_itemId String?
}

model payment {
  id             String  @id @default(cuid())
  user_id        String
  payment_method String
  amount         Float
  order          order[]
}
